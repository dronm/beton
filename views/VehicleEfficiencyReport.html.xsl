<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0"  xmlns:html="http://www.w3.org/TR/REC-html40" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format"><xsl:output method="html"/> <!--match - Defines the nodes to which the key will be applieduse - The value of the key for each of the nodes--><xsl:key name="days" match="row" use="rep_date_time_from/."/><xsl:key name="vehicles" match="row" use="vehicle_descr/."/><xsl:key name="vehicles_days" match="row" use="concat(vehicle_descr/.,'|',rep_date_time_from/.)"/><xsl:template name="format_num">	<xsl:param name="val"/>	<xsl:choose>		<xsl:when test="$val='0'">			<xsl:text>&#160;</xsl:text>		</xsl:when>		<xsl:otherwise>			<xsl:value-of select="$val"/>		</xsl:otherwise>			</xsl:choose></xsl:template><xsl:template name="format_num_avg">	<xsl:param name="val"/>	<xsl:choose>		<xsl:when test="$val='0'">			<xsl:text>&#160;</xsl:text>		</xsl:when>		<xsl:otherwise>			<xsl:value-of select="format-number( round(100*$val) div 100 ,'##0.00')"/>		</xsl:otherwise>			</xsl:choose></xsl:template><xsl:template name="format_money">	<xsl:param name="val"/>	<xsl:choose>		<xsl:when test="$val='0'">			<xsl:text>&#160;</xsl:text>		</xsl:when>		<xsl:otherwise>			<xsl:value-of select="format-number($val,'##0.00')"/>		</xsl:otherwise>			</xsl:choose></xsl:template><!-- Main template--><xsl:template match="/">	<xsl:choose>		<xsl:when test="not(document/model[@id='ModelServResponse']/row[1]/result='0')">		<xsl:apply-templates select="document/model[@id='ModelServResponse']"/>			</xsl:when>		<xsl:otherwise>			<xsl:apply-templates select="document/model[@id='VehicleEfficiency_Model']"/>			</xsl:otherwise>	</xsl:choose></xsl:template><!-- Error --><xsl:template match="model[@id='ModelServResponse']">	<div class="error">		<xsl:value-of select="row[1]/descr"/>	</div></xsl:template><!-- table --><xsl:template match="model[@id='VehicleEfficiency_Model']">	<table id="VehicleEfficiency_Model" class="table table-bordered table-responsive table-striped">		<!-- header -->		<thead>		<tr>			<th>№</th>			<th>ТС</th>			<th>Владелец</th>			<th>Св-во</th>			<xsl:for-each select="//row[generate-id() =			generate-id(key('days',rep_date_time_from/.)[1])]">								<th align="center">					<xsl:value-of select="substring(rep_date_time_from/.,9,2)"/>				</th>			</xsl:for-each>			<th>Итого рейсов</th>			<th>Сред.рейсов</th>			<th>Средняя стоимость рейса</th>			<th>Средняя выручка</th>			<th>Выручка всего</th>		</tr>		</thead> 				<!-- vehicles -->		<tbody>		<xsl:for-each select="//row[generate-id() =		generate-id(key('vehicles',vehicle_descr/.)[1])]">			<xsl:sort select="vehicle_feature/."/>			<xsl:variable name="vehicle" select="vehicle_descr/."/>						<xsl:variable name="row_class">				<xsl:choose>					<xsl:when test="position() mod 2">odd</xsl:when>					<xsl:otherwise>even</xsl:otherwise>																	</xsl:choose>			</xsl:variable>			<tr class="{$row_class}">				<td align="center"><xsl:value-of select="position()"/></td>				<td align="center"><xsl:value-of select="$vehicle"/></td>				<td align="center"><xsl:value-of select="vehicle_owner_descr/."/></td>				<td align="center"><xsl:value-of select="vehicle_feature/."/></td>				<xsl:for-each select="//row[generate-id() =				generate-id(key('days',rep_date_time_from/.)[1])]">					<xsl:variable name="veh_row" select="key('vehicles_days',concat($vehicle,'|',rep_date_time_from/.))"/>					<xsl:variable name="runs">						<xsl:choose>							<xsl:when test="$veh_row">								<xsl:call-template name="format_num">									<xsl:with-param name="val" select="$veh_row/runs/."/>								</xsl:call-template>							</xsl:when>							<xsl:otherwise></xsl:otherwise>						</xsl:choose>					</xsl:variable>					<xsl:variable name="day_on_shift_class">						<xsl:choose>							<xsl:when test="$veh_row and $veh_row/on_shift/.='true'">shift</xsl:when>							<xsl:otherwise>no_shift</xsl:otherwise>						</xsl:choose>										</xsl:variable>					<td class="{concat($day_on_shift_class,'')}" align="center">						<xsl:call-template name="format_num">							<xsl:with-param name="val" select="$runs"/>						</xsl:call-template>										</td>				</xsl:for-each>									<!-- totals-->				<xsl:variable name="runs" select="sum(key('vehicles',$vehicle)/runs/.)"/>				<xsl:variable name="runs_avg" select="$runs div sum(key('vehicles',$vehicle)/shifts_with_runs/.)"/>				<xsl:variable name="runs_cost" select="sum(key('vehicles',$vehicle)/ship_cost/.)"/>				<xsl:variable name="runs_cost_avg" select="$runs_cost div $runs"/>				<xsl:variable name="income_avg" select="$runs_cost_avg * $runs_avg"/>				<td class="total" align="right">					<xsl:call-template name="format_num">						<xsl:with-param name="val" select="$runs"/>					</xsl:call-template>									</td>				<td class="total" align="right">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="$runs_avg"/>					</xsl:call-template>									</td>				<td class="total" align="right">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="$runs_cost_avg"/>					</xsl:call-template>									</td>				<td class="total" align="right">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="$income_avg"/>					</xsl:call-template>									</td>				<td class="total" align="right">					<xsl:call-template name="format_money">						<xsl:with-param name="val" select="$runs_cost"/>					</xsl:call-template>									</td>							</tr>		</xsl:for-each>		</tbody>		<tfoot>			<tr>				<td class="total" colspan="4">Среднее рейсов</td>			<xsl:for-each select="//row[generate-id() =			generate-id(key('days',rep_date_time_from/.)[1])]">				<xsl:variable name="shifts_with_runs" select="sum(key('days',rep_date_time_from/.)/shifts_with_runs/.)"/>				<xsl:variable name="date_runs_avg">					<xsl:choose>						<xsl:when test="$shifts_with_runs &gt; 0">							<xsl:value-of select="sum(key('days',rep_date_time_from/.)/runs/.) div $shifts_with_runs"/>						</xsl:when>						<xsl:otherwise>0</xsl:otherwise>						</xsl:choose>				</xsl:variable>				<td class="total">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="$date_runs_avg"/>					</xsl:call-template>																				</td>			</xsl:for-each>										<td class="total" align="right">					<xsl:call-template name="format_num">						<xsl:with-param name="val" select="sum(//runs)"/>					</xsl:call-template>																				</td>							<td class="total" align="right">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="sum(//runs) div sum(//shifts_with_runs)"/>					</xsl:call-template>																				</td>							<td class="total" align="right">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="sum(//ship_cost) div sum(//runs)"/>					</xsl:call-template>																				</td>							<td class="total" align="right">					<xsl:call-template name="format_num_avg">						<xsl:with-param name="val" select="(sum(//runs) div sum(//shifts_with_runs)) * (sum(//ship_cost) div sum(//runs))"/>					</xsl:call-template>																				</td>							<td class="total" align="right">					<xsl:call-template name="format_money">						<xsl:with-param name="val" select="sum(//ship_cost)"/>					</xsl:call-template>																				</td>										</tr>			<tr>				<td class="total" colspan="4">Всего кубов</td>			<xsl:for-each select="//row[generate-id() =			generate-id(key('days',rep_date_time_from/.)[1])]">				<td class="total" align="right">					<xsl:call-template name="format_num">						<xsl:with-param name="val" select="sum(key('days',rep_date_time_from/.)/shipped_quant/.)"/>					</xsl:call-template>																				</td>			</xsl:for-each>										<td class="total" align="right">					<xsl:call-template name="format_num">						<xsl:with-param name="val" select="sum(//shipped_quant)"/>					</xsl:call-template>																				</td>							<td class="total" align="right" colspan="4">					<xsl:text>&#160;</xsl:text>				</td>										</tr>					</tfoot>	</table></xsl:template>	</xsl:stylesheet>