/** * @author Andrey Mikhalevich <katrenplus@mail.ru>, 2020  * @class * @classdesc	 * @param {string} id view identifier * @param {namespace} options */	function RepBaseFields(id,options){	options = options ||{};		if (options.commandPanel){		options.popUpMenu = new PopUpMenu();		options.commandPanel.commandsToPopUp(options.popUpMenu);	}	RepBaseFields.superclass.constructor.call(this,		id,options);		this.addFields(options.fields);	}extend(RepBaseFields,Grid);RepBaseFields.prototype.addFields = function(fields){	if (fields){		for (var i=0;i<fields.length;i++){			this.addField(fields[i]);		}	}			}/*	MUST BE OVERRIDDEN*/RepBaseFields.prototype.addField = function(fieldStruc){}RepBaseFields.prototype.getParams = function(){}RepBaseFields.prototype.getValueAsObj= function(){	var data = {};	var b = this.getBody();	var r_ind = 0;	for (var r_id in b.m_elements){		data[r_id] = {			"ind":DOMHandler.getElementIndex(b.m_elements[r_id].m_node),			"cells":{}};		for (var c_id in b.m_elements[r_id].m_elements){						if (b.m_elements[r_id].m_elements[c_id].m_controlContainer){				data[r_id].cells[c_id] = b.m_elements[r_id].m_elements[c_id].m_controlContainer.getValueAsObj();			}		}	}	return data;}RepBaseFields.prototype.setValueFromObj= function(obj){	var b = this.getBody();	var rows = b.m_node.getElementsByTagName("tr");	for (var r_id in b.m_elements){		if (obj[r_id]){			var ind = DOMHandler.getElementIndex(b.m_elements[r_id].m_node);			for (var c_id in b.m_elements[r_id].m_elements){				if (obj[r_id].cells[c_id]){					b.m_elements[r_id].m_elements[c_id].m_controlContainer.setValueFromObj(obj[r_id].cells[c_id]);				}			}			//set position			if (ind!=obj[r_id].ind&&obj[r_id].ind<rows.length){				//swap rows								b.m_node.insertBefore(rows[ind],rows[obj[r_id].ind]);			}		}	}}