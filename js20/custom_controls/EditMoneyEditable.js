/** Copyright (c) 2014,2019  *	Andrey Mikhalevich, Katren ltd. *//* constructor */function EditMoneyEditable(id,options){	options = options || {};		options.enabled = false;	this.m_onToggleEditable = options.onToggleEditable;	this.m_toggleAllowed = (options.toggleAllowed!=undefined)? options.toggleAllowed:true;	var self = this;	options.buttonOpen = new ButtonCtrl(id+"_btn_edit",{		"glyph":"glyphicon-pencil glyphMoneyField",		"className":"btn btn-default btnMoneyField",		"onClick":function(){			if(self.m_toggleAllowed){				self.toggleEdit();				if(self.m_onToggleEditable)self.m_onToggleEditable();			}		}	});		EditMoneyEditable.superclass.constructor.call(this,id,options);}extend(EditMoneyEditable,EditMoney);EditMoneyEditable.prototype.EDIT_ALLOWED_CLASS = "moneyEditable";EditMoneyEditable.prototype.m_editAllowed;EditMoneyEditable.prototype.m_toggleAllowed;EditMoneyEditable.prototype.applyEdit = function(){	this.setEnabled(this.m_editAllowed);		if (this.m_editAllowed){		this.m_node.focus();		if(!DOMHelper.hasClass(this.m_node,this.EDIT_ALLOWED_CLASS)){			DOMHelper.addClass(this.m_node,this.EDIT_ALLOWED_CLASS);		}	}	else{		DOMHelper.delClass(this.m_node,this.EDIT_ALLOWED_CLASS);	}}EditMoneyEditable.prototype.toggleEdit = function(){	this.m_editAllowed = !this.m_editAllowed;	this.applyEdit();	}EditMoneyEditable.prototype.setEnabled = function(en){	EditMoneyEditable.superclass.setEnabled.call(this,en);	if (this.m_btnEdit){		this.m_btnEdit.setEnabled(true);	}}EditMoneyEditable.prototype.setEditAllowed = function(v){	this.m_editAllowed = v;	this.applyEdit();}EditMoneyEditable.prototype.getEditAllowed = function(){	return this.m_editAllowed;}